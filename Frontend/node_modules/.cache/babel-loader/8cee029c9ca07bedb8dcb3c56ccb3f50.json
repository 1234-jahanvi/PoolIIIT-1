{"ast":null,"code":"import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as endpoint from \"../../api\";\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = data => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: data.token,\n    username: data.username\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('expirationDate');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post(endpoint.USER_LOGIN_URL, {\n      username: username,\n      password: password\n    }).then(res => {\n      const token = res.data.key;\n      console.log(\"1\");\n      console.log(res);\n      console.log(\"2\");\n      console.log(res.config.data);\n      console.log(\"3\");\n      console.log(res.config.data[1]);\n      const username = res.data.username;\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem('token', token);\n      localStorage.setItem('username', username);\n      localStorage.setItem('expirationDate', expirationDate);\n      dispatch(authSuccess(res.data));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authSignup = (username, email, password1, password2) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post(endpoint.USER_REGISTER_URL, {\n      username: username,\n      email: email,\n      password1: password1,\n      password2: password2\n    }).then(res => {\n      const token = res.data.key;\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem('token', token);\n      localStorage.setItem('expirationDate', expirationDate);\n      dispatch(authSuccess(res.data));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        const data = {\n          token: token,\n          username: localStorage.getItem('username')\n        };\n        dispatch(authSuccess(data));\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/home/divyam/PoolDjango/frontend/src/store/actions/auth.js"],"names":["axios","actionTypes","endpoint","authStart","type","AUTH_START","authSuccess","data","AUTH_SUCCESS","token","username","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","authLogin","password","post","USER_LOGIN_URL","then","res","key","console","log","config","expirationDate","Date","getTime","setItem","catch","err","authSignup","email","password1","password2","USER_REGISTER_URL","authCheckState","getItem","undefined"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport * as actionTypes from \"./actionTypes\";\nimport * as endpoint from \"../../api\";\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = (data) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: data.token,\n        username: data.username,\n    }\n}\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    }\n}\n\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000)\n    }\n}\n\nexport const authLogin = (username, password) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post(endpoint.USER_LOGIN_URL, {\n            username: username,\n            password: password,\n        })\n        .then(res => {\n            const token = res.data.key;\n            console.log(\"1\")\n            console.log(res)\n            console.log(\"2\")\n            console.log(res.config.data)\n            console.log(\"3\")\n            console.log(res.config.data[1])\n            const username = res.data.username;\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            localStorage.setItem('token', token);\n            localStorage.setItem('username', username);\n            localStorage.setItem('expirationDate', expirationDate);\n            dispatch(authSuccess(res.data));\n            dispatch(checkAuthTimeout(3600));\n        })\n        .catch(err => {\n            dispatch(authFail(err))\n        })\n    }\n}\n\n\nexport const authSignup = (username, email, password1, password2) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post(endpoint.USER_REGISTER_URL, {\n            username: username,\n            email: email,\n            password1: password1,\n            password2: password2\n        })\n        .then(res => {\n            const token = res.data.key;\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            localStorage.setItem('token', token);\n            localStorage.setItem('expirationDate', expirationDate);\n            dispatch(authSuccess(res.data));\n            dispatch(checkAuthTimeout(3600));\n        })\n        .catch(err => {\n            dispatch(authFail(err))\n        })\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (token === undefined) {\n            dispatch(logout());\n        }\n        else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\n            if (expirationDate <= new Date()) {\n                dispatch(logout());\n            }\n            else {\n                const data = {\n                    token: token,\n                    username: localStorage.getItem('username')\n                }\n                dispatch(authSuccess(data));\n                dispatch(checkAuthTimeout( (expirationDate.getTime() - new Date().getTime()) / 1000 ));\n            }\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}