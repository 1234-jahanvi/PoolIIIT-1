{"ast":null,"code":"var _jsxFileName = \"/home/divyam/PoolDjango/frontend/src/containers/Register.js\";\nimport React, { Component } from \"react\";\nimport { Form, Input, Button } from 'antd';\nimport { UserOutlined, LockOutlined, MailOutlined, MobileOutlined } from '@ant-design/icons';\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/auth\";\nimport { ErrorHandler } from \"../utils/ErrorHandler\";\n\nclass RegisterForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onFinish = values => {\n      this.props.onAuth(values.firstname, values.lastname, values.username, values.email, values.password, values.phone);\n    };\n\n    this.onAuthenticated = () => {\n      this.props.history.push('/login');\n    };\n  }\n\n  render() {\n    if (this.props.isAuthenticated) {\n      this.onAuthenticated();\n    }\n\n    let errorMessage = null;\n\n    if (this.props.error) {\n      errorMessage = /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }, ErrorHandler(this.props.error));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, errorMessage), /*#__PURE__*/React.createElement(Form, {\n      name: \"register\",\n      onFinish: this.onFinish,\n      scrollToFirstError: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"firstname\",\n      rules: [{\n        required: true,\n        message: 'Please input your Firstname!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      prefix: /*#__PURE__*/React.createElement(UserOutlined, {\n        className: \"site-form-item-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 36\n        }\n      }),\n      placeholder: \"Firstname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"lastname\",\n      rules: [{\n        required: true,\n        message: 'Please input your Lastname!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      prefix: /*#__PURE__*/React.createElement(UserOutlined, {\n        className: \"site-form-item-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 36\n        }\n      }),\n      placeholder: \"Lastname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({\n      name: \"username\",\n      rules: [{\n        required: true,\n        message: 'Please input your Username!'\n      }]\n      /* Temporary */\n\n    }, this.props.error && {\n      help: \"Username is already taken\",\n      validateStatus: \"error\"\n    }, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      prefix: /*#__PURE__*/React.createElement(UserOutlined, {\n        className: \"site-form-item-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 36\n        }\n      }),\n      placeholder: \"Username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"email\",\n      rules: [{\n        type: 'email',\n        message: 'The input is not valid E-mail!'\n      }, {\n        required: true,\n        message: 'Please input your E-mail!'\n      }],\n      hasFeedback: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      prefix: /*#__PURE__*/React.createElement(MailOutlined, {\n        className: \"site-form-item-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 36\n        }\n      }),\n      placeholder: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"password\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      hasFeedback: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input.Password, {\n      prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n        className: \"site-form-item-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 33\n        }\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"confirm\",\n      dependencies: ['password'],\n      hasFeedback: true,\n      rules: [{\n        required: true,\n        message: 'Please confirm your password!'\n      }, ({\n        getFieldValue\n      }) => ({\n        validator(rule, value) {\n          if (!value || getFieldValue('password') === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject('The two passwords that you entered do not match!');\n        }\n\n      })],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input.Password, {\n      prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n        className: \"site-form-item-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 33\n        }\n      }),\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"phone\",\n      rules: [{\n        required: true,\n        message: 'Please input your phone number!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      addonBefore: \"+91\",\n      prefix: /*#__PURE__*/React.createElement(MobileOutlined, {\n        className: \"site-form-item-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 33\n        }\n      }),\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Phone number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      style: {\n        marginRight: \"10px\"\n      },\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }, \"Register\"), \"Already have an account?\", /*#__PURE__*/React.createElement(NavLink, {\n      style: {\n        marginLeft: \"5px\"\n      },\n      to: \"/login/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, \" Login Here\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error,\n    isAuthenticated: state.isAuthenticated\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (firstname, lastname, username, email, password, phone) => dispatch(actions.authSignup(firstname, lastname, username, email, password, phone))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterForm);","map":{"version":3,"sources":["/home/divyam/PoolDjango/frontend/src/containers/Register.js"],"names":["React","Component","Form","Input","Button","UserOutlined","LockOutlined","MailOutlined","MobileOutlined","NavLink","connect","actions","ErrorHandler","RegisterForm","onFinish","values","props","onAuth","firstname","lastname","username","email","password","phone","onAuthenticated","history","push","render","isAuthenticated","errorMessage","error","required","message","help","validateStatus","type","getFieldValue","validator","rule","value","Promise","resolve","reject","width","marginRight","marginLeft","mapStateToProps","state","loading","mapDispatchToProps","dispatch","authSignup"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\n\nimport {\n    Form,\n    Input,\n    Button\n} from 'antd';\n\nimport { UserOutlined, LockOutlined, MailOutlined, MobileOutlined } from '@ant-design/icons';\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport * as actions from \"../actions/auth\"\nimport { ErrorHandler } from \"../utils/ErrorHandler\"\n\n\nclass RegisterForm extends Component {\n    \n\n    onFinish = values => {\n        this.props.onAuth(values.firstname, values.lastname, values.username, values.email, values.password, values.phone);\n    };\n\n    onAuthenticated = () => {\n        this.props.history.push('/login')\n    }\n\n    render() {\n        if(this.props.isAuthenticated){\n            this.onAuthenticated()\n        }\n\n        let errorMessage = null;\n        if (this.props.error) {\n            errorMessage = (\n                <p>{ErrorHandler(this.props.error)}</p>\n            );\n        }\n\n        return (\n            <div>\n            <div>{errorMessage}</div>\n            <Form\n                name=\"register\"\n                onFinish={this.onFinish}\n                scrollToFirstError\n            >\n                <Form.Item\n                    name=\"firstname\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your Firstname!',\n                        },\n                    ]}\n                >\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Firstname\" />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"lastname\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your Lastname!',\n                        },\n                    ]}\n                >\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Lastname\" />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"username\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your Username!',\n                        },\n                    ]}\n                    /* Temporary */\n                    {...this.props.error && {\n                        help: \"Username is already taken\",\n                        validateStatus: \"error\"\n                    }}\n                >\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\n                </Form.Item>\n        \n                <Form.Item\n                    name=\"email\"\n                    rules={[\n                        {\n                            type: 'email',\n                            message: 'The input is not valid E-mail!',\n                        },\n                        {\n                            required: true,\n                            message: 'Please input your E-mail!',\n                        },\n                    ]}\n                    hasFeedback\n                >\n                    <Input prefix={<MailOutlined className=\"site-form-item-icon\" />} placeholder=\"Email\"/>\n                </Form.Item>\n        \n                <Form.Item\n                    name=\"password\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your password!',\n                        },\n                    ]}\n                    hasFeedback\n                >\n                    <Input.Password \n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                    />\n                </Form.Item>\n        \n                <Form.Item\n                    name=\"confirm\"\n                    dependencies={['password']}\n                    hasFeedback\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please confirm your password!',\n                        },\n                        ({ getFieldValue }) => ({\n                            validator(rule, value) {\n                                if (!value || getFieldValue('password') === value) {\n                                    return Promise.resolve();\n                                }\n                                return Promise.reject('The two passwords that you entered do not match!');\n                            },\n                        }),\n                    ]}\n                >\n                    <Input.Password \n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                        type=\"password\"\n                        placeholder=\"Confirm Password\"\n                    />\n                </Form.Item>\n        \n                <Form.Item\n                    name=\"phone\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your phone number!',\n                        },\n                    ]}\n                >\n                    <Input\n                        addonBefore={\"+91\"}\n                        prefix={<MobileOutlined className=\"site-form-item-icon\" />} \n                        style={{width: '100%'}} \n                        placeholder=\"Phone number\"/>\n                </Form.Item>\n\n                <Form.Item>\n                    <Button style= {{marginRight: \"10px\"}} type=\"primary\" htmlType=\"submit\">\n                    Register\n                    </Button>\n                    Already have an account?  \n                    <NavLink style= {{marginLeft: \"5px\"}} to= \"/login/\"> Login Here</NavLink>\n                </Form.Item>\n            </Form>\n            </div>\n        );\n    };\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        error: state.error,\n        isAuthenticated: state.isAuthenticated\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onAuth: (firstname, lastname, username, email, password, phone) => dispatch(actions.authSignup(firstname, lastname, username, email, password, phone))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterForm);\n"]},"metadata":{},"sourceType":"module"}