{"ast":null,"code":"import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as endpoint from \"../../api\";\naxios.defaults.xsrfCookieName = 'csrftoken';\naxios.defaults.xsrfHeaderName = 'X-CSRFToken';\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = token => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem('user');\n  localStorage.removeItem('expirationDate');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    var csrfCookie = Cookies.get('XSRF-TOKEN');\n    dispatch(authStart());\n    axios.post(endpoint.USER_LOGIN_URL, {\n      username: username,\n      password: password\n    }, {\n      headers: {\n        'X-CSRFTOKEN': csrfCookie\n      }\n    }).then(res => {\n      const token = res.data.key;\n      const expirationDate = new Date(new Date().getTime + 3600 * 1000);\n      localStorage.setItem('token', token);\n      localStorage.setItem('expirationDate', expirationDate);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authSignup = (username, email, password1, password2) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post(endpoint.USER_REGISTER_URL, {\n      username: username,\n      email: email,\n      password1: password1,\n      password2: password2\n    }).then(res => {\n      const token = res.data.key;\n      const expirationDate = new Date(new Date().getTime + 3600 * 1000);\n      localStorage.setItem('token', token);\n      localStorage.setItem('expirationDate', expirationDate);\n      dispatch(authSuccess(token));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/home/divyam/PoolDjango/frontend/src/store/actions/auth.js"],"names":["axios","actionTypes","endpoint","defaults","xsrfCookieName","xsrfHeaderName","authStart","type","AUTH_START","authSuccess","token","AUTH_SUCCESS","authFail","error","AUTH_FAIL","checkAuthTimeout","expirationTime","dispatch","setTimeout","logout","localStorage","removeItem","AUTH_LOGOUT","authLogin","username","password","csrfCookie","Cookies","get","post","USER_LOGIN_URL","headers","then","res","data","key","expirationDate","Date","getTime","setItem","catch","err","authSignup","email","password1","password2","USER_REGISTER_URL","authCheckState","getItem","undefined"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport * as actionTypes from \"./actionTypes\";\nimport * as endpoint from \"../../api\";\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n \nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = (token) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token\n    }\n}\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000)\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('user');\n    localStorage.removeItem('expirationDate');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    }\n}\n\nexport const authLogin = (username, password) => {\n    return dispatch => {\n        var csrfCookie = Cookies.get('XSRF-TOKEN');\n        dispatch(authStart());\n        axios.post(endpoint.USER_LOGIN_URL, {\n            username: username,\n            password: password\n        },\n        {\n            headers: {\n                 'X-CSRFTOKEN': csrfCookie,\n             },\n        })\n        .then(res => {\n            const token = res.data.key;\n            const expirationDate = new Date(new Date().getTime + 3600 * 1000);\n            localStorage.setItem('token', token);\n            localStorage.setItem('expirationDate', expirationDate);\n            dispatch(authSuccess(token));\n            dispatch(checkAuthTimeout(3600));\n        })\n        .catch(err => {\n            dispatch(authFail(err))\n        })\n    }\n}\n\n\nexport const authSignup = (username, email, password1, password2) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post(endpoint.USER_REGISTER_URL, {\n            username: username,\n            email: email,\n            password1: password1,\n            password2: password2\n        })\n        .then(res => {\n            const token = res.data.key;\n            const expirationDate = new Date(new Date().getTime + 3600 * 1000);\n            localStorage.setItem('token', token);\n            localStorage.setItem('expirationDate', expirationDate);\n            dispatch(authSuccess(token));\n            dispatch(checkAuthTimeout(3600));\n        })\n        .catch(err => {\n            dispatch(authFail(err))\n        })\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (token === undefined) {\n            dispatch(logout());\n        }\n        else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\n            if (expirationDate <= new Date()) {\n                dispatch(logout());\n            }\n            else {\n                dispatch(authSuccess(token));\n                dispatch(checkAuthTimeout( (expirationDate.getTime() - new Date().getTime()) / 1000 ));\n            }\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}