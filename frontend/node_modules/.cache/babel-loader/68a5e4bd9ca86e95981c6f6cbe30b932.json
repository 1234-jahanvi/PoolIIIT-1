{"ast":null,"code":"import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\nimport * as endpoint from \"../api/constants\";\nimport store from '../store';\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = data => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: data.token,\n    username: data.username\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem('expirationDate');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post(endpoint.USER_LOGIN_URL, {\n      username: username,\n      password: password\n    }).then(res => {\n      const token = res.data.key;\n      const username = JSON.parse(res.config.data).username;\n      console.log(res);\n      const data = {\n        token: token,\n        username: username\n      };\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem('expirationDate', expirationDate);\n      dispatch(authSuccess(data));\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authSignup = (firstname, lastname, username, email, password, phone) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post(endpoint.USER_REGISTER_URL, {\n      first_name: firstname,\n      last_name: lastname,\n      username: username,\n      email: email,\n      password: password,\n      phone: phone\n    }).then(res => {\n      const token = res.data.key;\n      const username = JSON.parse(res.config.data).username;\n      const data = {\n        token: token,\n        username: username\n      };\n      const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n      localStorage.setItem('expirationDate', expirationDate);\n      /* dispatch(authSuccess(data)); */\n\n      dispatch(checkAuthTimeout(3600));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = store.getState().token;\n\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/home/divyam/PoolDjango/frontend/src/actions/auth.js"],"names":["axios","actionTypes","endpoint","store","authStart","type","AUTH_START","authSuccess","data","AUTH_SUCCESS","token","username","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","authLogin","password","post","USER_LOGIN_URL","then","res","key","JSON","parse","config","console","log","expirationDate","Date","getTime","setItem","catch","err","authSignup","firstname","lastname","email","phone","USER_REGISTER_URL","first_name","last_name","authCheckState","getState","undefined","getItem"],"mappings":"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","sourcesContent":["import axios from \"axios\"\nimport * as actionTypes from \"./actionTypes\";\nimport * as endpoint from \"../api/constants\";\nimport store from '../store';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = (data) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: data.token,\n        username: data.username,\n    }\n}\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('expirationDate');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    }\n}\n\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000)\n    }\n}\n\nexport const authLogin = (username, password) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post(endpoint.USER_LOGIN_URL, {\n            username: username,\n            password: password,\n        })\n        .then(res => {\n            const token = res.data.key;\n            const username = JSON.parse(res.config.data).username\n            console.log(res)\n            const data = {\n                token: token,\n                username: username\n            }\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            localStorage.setItem('expirationDate', expirationDate);\n            dispatch(authSuccess(data));\n            dispatch(checkAuthTimeout(3600));\n        })\n        .catch(err => {\n            dispatch(authFail(err))\n        })\n    }\n}\n\n\nexport const authSignup = (firstname, lastname, username, email, password, phone) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post(endpoint.USER_REGISTER_URL, {\n            first_name: firstname,\n            last_name: lastname,\n            username: username,\n            email: email,\n            password: password,\n            phone: phone\n        })\n        .then(res => {\n            const token = res.data.key;\n            const username = JSON.parse(res.config.data).username\n            const data = {\n                token: token,\n                username: username\n            }\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            localStorage.setItem('expirationDate', expirationDate);\n            /* dispatch(authSuccess(data)); */\n            dispatch(checkAuthTimeout(3600));\n        })\n        .catch(err => {\n            dispatch(authFail(err))\n        })\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = store.getState().token;\n        if (token === undefined) {\n            dispatch(logout());\n        }\n        else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\n            if (expirationDate <= new Date()) {\n                dispatch(logout());\n            }\n            else {\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000 ));\n            }\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}