{"ast":null,"code":"var _jsxFileName = \"/home/divyam/PoolDjango/frontend/src/containers/Register.js\";\nimport React, { Component } from \"react\";\nimport { Form, Input, Button } from 'antd';\nimport { UserOutlined, LockOutlined, MailOutlined, MobileOutlined } from '@ant-design/icons';\nimport { NavLink } from \"react-router-dom\";\n\nclass RegisterForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onFinish = values => {\n      console.log('Received values of form: ', values);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Form, {\n      name: \"register\",\n      onFinish: this.onFinish,\n      scrollToFirstError: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"username\",\n      rules: [{\n        required: true,\n        message: 'Please input your Username!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      prefix: /*#__PURE__*/React.createElement(UserOutlined, {\n        className: \"site-form-item-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 36\n        }\n      }),\n      placeholder: \"Username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"email\",\n      rules: [{\n        type: 'email',\n        message: 'The input is not valid E-mail!'\n      }, {\n        required: true,\n        message: 'Please input your E-mail!'\n      }],\n      hasFeedback: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      prefix: /*#__PURE__*/React.createElement(MailOutlined, {\n        className: \"site-form-item-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 36\n        }\n      }),\n      placeholder: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"password\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      hasFeedback: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input.Password, {\n      prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n        className: \"site-form-item-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 33\n        }\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"confirm\",\n      dependencies: ['password'],\n      hasFeedback: true,\n      rules: [{\n        required: true,\n        message: 'Please confirm your password!'\n      }, ({\n        getFieldValue\n      }) => ({\n        validator(rule, value) {\n          if (!value || getFieldValue('password') === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject('The two passwords that you entered do not match!');\n        }\n\n      })],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input.Password, {\n      prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n        className: \"site-form-item-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 33\n        }\n      }),\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"phone\",\n      rules: [{\n        required: true,\n        message: 'Please input your phone number!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      addonBefore: \"+91\",\n      prefix: /*#__PURE__*/React.createElement(MobileOutlined, {\n        className: \"site-form-item-icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 33\n        }\n      }),\n      style: {\n        width: '100%'\n      },\n      placeholder: \"Phone number\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      style: {\n        marginRight: \"10px\"\n      },\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, \"Register\"), \"already have an account?\", /*#__PURE__*/React.createElement(NavLink, {\n      style: {\n        marginLeft: \"5px\"\n      },\n      to: \"/login/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, \" Login Here\")));\n  }\n\n}\n\nexport default RegisterForm;","map":{"version":3,"sources":["/home/divyam/PoolDjango/frontend/src/containers/Register.js"],"names":["React","Component","Form","Input","Button","UserOutlined","LockOutlined","MailOutlined","MobileOutlined","NavLink","RegisterForm","onFinish","values","console","log","render","required","message","type","getFieldValue","validator","rule","value","Promise","resolve","reject","width","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\n\nimport {\n    Form,\n    Input,\n    Button\n} from 'antd';\n\nimport { UserOutlined, LockOutlined, MailOutlined, MobileOutlined } from '@ant-design/icons';\nimport { NavLink } from \"react-router-dom\";\n\nclass RegisterForm extends Component {\n    \n    onFinish = values => {\n        console.log('Received values of form: ', values);\n    };\n\n    render() {\n        return (\n            <Form\n                name=\"register\"\n                onFinish={this.onFinish}\n                scrollToFirstError\n            >\n                <Form.Item\n                    name=\"username\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your Username!',\n                        },\n                    ]}\n                >\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\n                </Form.Item>\n        \n                <Form.Item\n                    name=\"email\"\n                    rules={[\n                        {\n                            type: 'email',\n                            message: 'The input is not valid E-mail!',\n                        },\n                        {\n                            required: true,\n                            message: 'Please input your E-mail!',\n                        },\n                    ]}\n                    hasFeedback\n                >\n                    <Input prefix={<MailOutlined className=\"site-form-item-icon\" />} placeholder=\"Email\"/>\n                </Form.Item>\n        \n                <Form.Item\n                    name=\"password\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your password!',\n                        },\n                    ]}\n                    hasFeedback\n                >\n                    <Input.Password \n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                    />\n                </Form.Item>\n        \n                <Form.Item\n                    name=\"confirm\"\n                    dependencies={['password']}\n                    hasFeedback\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please confirm your password!',\n                        },\n                        ({ getFieldValue }) => ({\n                            validator(rule, value) {\n                                if (!value || getFieldValue('password') === value) {\n                                    return Promise.resolve();\n                                }\n                                return Promise.reject('The two passwords that you entered do not match!');\n                            },\n                        }),\n                    ]}\n                >\n                    <Input.Password \n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                        type=\"password\"\n                        placeholder=\"Confirm Password\"\n                    />\n                </Form.Item>\n        \n                <Form.Item\n                    name=\"phone\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your phone number!',\n                        },\n                    ]}\n                >\n                    <Input\n                        addonBefore={\"+91\"}\n                        prefix={<MobileOutlined className=\"site-form-item-icon\" />} \n                        style={{width: '100%'}} \n                        placeholder=\"Phone number\"/>\n                </Form.Item>\n\n                <Form.Item>\n                    <Button style= {{marginRight: \"10px\"}} type=\"primary\" htmlType=\"submit\">\n                    Register\n                    </Button>\n                    already have an account?  \n                    <NavLink style= {{marginLeft: \"5px\"}} to= \"/login/\"> Login Here</NavLink>\n                </Form.Item>\n            </Form>\n        );\n    };\n}\n\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}