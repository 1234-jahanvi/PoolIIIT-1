{"ast":null,"code":"var _jsxFileName = \"/home/divyam/PoolDjango/frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport axios from 'axios';\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"./store/reducers/auth\";\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.withCredentials = true;\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhances(applyMiddleware(thunk)));\nconst app = /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }\n}));\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }\n}, app), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/divyam/PoolDjango/frontend/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","axios","createStore","compose","applyMiddleware","thunk","Provider","reducer","defaults","xsrfHeaderName","xsrfCookieName","withCredentials","composeEnhances","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","app","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AAEAN,KAAK,CAACO,QAAN,CAAeC,cAAf,GAAgC,aAAhC;AACAR,KAAK,CAACO,QAAN,CAAeE,cAAf,GAAgC,WAAhC;AACAT,KAAK,CAACO,QAAN,CAAeG,eAAf,GAAiC,IAAjC;AAGA,MAAMC,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+CX,OAAvE;AAEA,MAAMY,KAAK,GAAGb,WAAW,CAACK,OAAD,EAAUK,eAAe,CAChDR,eAAe,CAACC,KAAD,CADiC,CAAzB,CAAzB;AAKA,MAAMW,GAAG,gBACP,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF;AAOAjB,QAAQ,CAACmB,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGD,GADH,CADF,EAIEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;;AACAnB,aAAa,CAACoB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport axios from 'axios';\n\nimport { createStore, compose, applyMiddleware } from \"redux\"\nimport thunk from \"redux-thunk\"\nimport { Provider } from \"react-redux\";\n\nimport reducer from \"./store/reducers/auth\"\n\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\naxios.defaults.xsrfCookieName = \"csrftoken\";\naxios.defaults.withCredentials = true;\n\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(reducer, composeEnhances(\n  applyMiddleware(thunk)\n));\n\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\n\nReactDOM.render(\n  <React.StrictMode>\n    {app}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}